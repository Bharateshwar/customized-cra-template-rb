/**
*
* {{ properCase componentName }}
*
*/
{{#if wantMemo}}
import { memo } from 'react';
{{/if}}
import PropTypes from 'prop-types';
{{#if wantStyledComponents}}
import styled from 'styled-components/macro';
{{/if}}
{{#if wantTranslations}}
import { useTranslation } from 'react-i18next';
import { messages } from './messages';
{{/if}}

export const {{ properCase componentName }}: React.VFC<PropTypes.InferProps<typeof propTypes>> = (props) => {
  {{#if wantTranslations}}
  const { t, i18n } = useTranslation();
  {{/if}}

  return (
  {{#if wantStyledComponents}}
  <Div>
  {{else}}
  <div>
  {{/if}}
    {{#if wantTranslations}}
    {t('')}
    {/*  {t(...messages.someThing())}  */}
    {{/if}}
  {{#if wantStyledComponents}}
  </Div>
  {{else}}
  </div>
  {{/if}}
  );
};

{{#if wantStyledComponents}}
const Div = styled.div``;
{{/if}}

const propTypes = {}

{{ properCase componentName }}.propTypes = propTypes;

{{#if wantMemo}}
export default memo({{ properCase componentName }});
{{else}}
export default {{ properCase componentName }};
{{/if}}